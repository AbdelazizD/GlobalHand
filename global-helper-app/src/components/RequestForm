import { FaHeart, FaMapMarkerAlt } from "react-icons/fa";
import { formatDistanceToNow } from "date-fns";
import { IoClose } from "react-icons/io5";
import Flag from "react-world-flags";

export default function TaskDetailsDrawer({ task, onClose, className = "" }) {
  if (!task) return null;

  const points = typeof task.points === "number" ? task.points : 1;
  const hearts = Array.from({ length: points });

  // âœ… Safe date formatter for Firestore Timestamp or string/date
  function getFormattedTime(value) {
    let parsedDate;
    try {
      parsedDate = value?.toDate?.() || new Date(value);
      if (isNaN(parsedDate.getTime())) throw new Error("Invalid date");
      return formatDistanceToNow(parsedDate, { addSuffix: true });
    } catch {
      return "some time ago";
    }
  }

  return (
    <div className={`w-full h-full bg-white shadow-lg overflow-y-auto relative z-20 ${className}`}>
      {/* Close Button */}
      <button
        onClick={onClose}
        className="absolute top-4 right-4 text-gray-500 hover:text-black"
      >
        <IoClose size={24} />
      </button>

      <div className="p-6 pt-12">
        {/* Header */}
        <div className="flex items-center space-x-3 mb-4">
          <img
            src={task.avatar || "/default-avatar.png"}
            alt="User Avatar"
            className="w-12 h-12 rounded-full border border-emerald-500"
          />
          <div className="flex space-x-1">
            {hearts.map((_, i) => (
              <FaHeart key={i} className="text-emerald-500" />
            ))}
          </div>
        </div>

        {/* Description */}
        <p className="text-gray-800 mb-4">{task.description}</p>

        {/* Location */}
        <div className="flex items-center text-sm text-gray-600 mb-3">
          <Flag
            code={task.countryCode || "AU"}
            style={{ width: 20, height: 14, borderRadius: 2 }}
          />
          <span className="ml-2">{task.location || "Unknown Location"}</span>
          <FaMapMarkerAlt className="ml-2 text-gray-500" />
        </div>

        {/* Time since posted */}
        <p className="text-xs text-gray-500 mb-6">
          Posted {getFormattedTime(task.createdAt)}
        </p>

        {/* Action Buttons */}
        <div className="space-y-2">
          <button className="w-full bg-emerald-500 text-white py-2 px-4 rounded-md hover:bg-emerald-600 transition">
            Make an Offer
          </button>
          <button className="w-full border border-gray-300 text-gray-700 py-2 px-4 rounded-md hover:bg-gray-100 transition">
            Ask a Question
          </button>
        </div>
      </div>
    </div>
  );
}
